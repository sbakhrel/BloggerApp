{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Bakhrel's\\\\Desktop\\\\proj\\\\CF-ment\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const [postData, setPostData] = useState({\n    writer: '',\n    title: '',\n    blog: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    } else {\n      dispatch(createPost(postData));\n      clear();\n    }\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      writer: '',\n      title: '',\n      blog: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Update' : 'Write', \"Here a BlogPost\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Writer\",\n        fullWidth: true,\n        value: postData.writer,\n        onChange: e => setPostData({ ...postData,\n          writer: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        name: \"blog\",\n        variant: \"outlined\",\n        label: \"Blog\",\n        fullWidth: true,\n        multiline: true,\n        rows: 7,\n        value: postData.blog,\n        onChange: e => setPostData({ ...postData,\n          blog: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags (coma separated)\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"5VBH4pRtaB5caGiv0QF8+XGLGfg=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/Bakhrel's/Desktop/proj/CF-ment/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","writer","title","blog","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FileBase from 'react-file-base64';\r\n\r\nimport useStyles from './styles';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n  const [postData, setPostData] = useState({ writer: '', title: '', blog: '', tags: '', selectedFile: '' });\r\n  const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (post) setPostData(post);\r\n  }, [post])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (currentId) {\r\n      dispatch(updatePost(currentId, postData));\r\n      clear();\r\n    } else {\r\n      dispatch(createPost(postData));\r\n      clear();\r\n    }\r\n  }\r\n\r\n  const clear = () => {\r\n    setCurrentId(null);\r\n    setPostData({ writer: '', title: '', blog: '', tags: '', selectedFile: '' });\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n        <Typography\r\n          variant=\"h6\">\r\n          {currentId ? 'Update' : 'Write'}\r\n          Here a BlogPost\r\n          </Typography>\r\n\r\n        <TextField\r\n          required\r\n          name=\"creator\"\r\n          variant=\"outlined\"\r\n          label=\"Writer\"\r\n          fullWidth\r\n          value={postData.writer}\r\n          onChange={(e) => setPostData({ ...postData, writer: e.target.value })}\r\n        />\r\n\r\n        <TextField\r\n          required\r\n          name=\"title\"\r\n          variant=\"outlined\"\r\n          label=\"Title\"\r\n          fullWidth\r\n          value={postData.title}\r\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n        />\r\n\r\n        <TextField\r\n          required\r\n          name=\"blog\"\r\n          variant=\"outlined\"\r\n          label=\"Blog\"\r\n          fullWidth\r\n          multiline\r\n          rows={7}\r\n          value={postData.blog}\r\n          onChange={(e) => setPostData({ ...postData, blog: e.target.value })}\r\n        />\r\n\r\n        <TextField\r\n          required\r\n          name=\"tags\"\r\n          variant=\"outlined\"\r\n          label=\"Tags (coma separated)\"\r\n          fullWidth value={postData.tags}\r\n          onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}\r\n        />\r\n\r\n        <div className={classes.fileInput}>\r\n          <br />\r\n          <FileBase\r\n            type=\"file\"\r\n            multiple={false}\r\n            onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })}\r\n          />\r\n          <br /> <br />\r\n        </div>\r\n\r\n        <Button\r\n          className={classes.buttonSubmit}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          fullWidth>\r\n          Submit\r\n            </Button>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          onClick={clear}\r\n          fullWidth>\r\n          Clear\r\n          </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n\r\n}\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}